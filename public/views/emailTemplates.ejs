
<container class="bg-gray-100">
    <div class="container mx-auto mt-10">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-3xl font-bold">Email Templates</h1>
            <button onclick="openModal('create')" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                Add New Template
            </button>
        </div>
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <table class="min-w-full bg-white">
                <thead>
                    <tr>
                        <th class="px-4 py-2 border-b-2 border-gray-200 bg-gray-100 text-left text-sm leading-4 text-gray-600 font-medium">Subject</th>
                        <th class="px-4 py-2 border-b-2 border-gray-200 bg-gray-100 text-left text-sm leading-4 text-gray-600 font-medium">Body</th>
                        <th class="px-4 py-2 border-b-2 border-gray-200 bg-gray-100 text-left text-sm leading-4 text-gray-600 font-medium">Actions</th>
                    </tr>
                </thead>
                <tbody id="emailTemplatesBody">
                    <!-- JavaScript will populate this section -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal -->
    <div id="modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <h3 id="modalTitle" class="text-lg leading-6 font-medium text-gray-900"></h3>
                <div class="mt-2 px-7 py-3">
                    <form id="emailTemplateForm">
                        <input type="hidden" id="emailTemplateId">
                        <div class="mb-4">
                            <label for="subject" class="block text-gray-700 text-sm font-bold mb-2">Subject</label>
                            <input type="text" id="subject" name="subject" placeholder="Enter subject" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                        </div>
                        <div class="mb-4">
                            <label for="body" class="block text-gray-700 text-sm font-bold mb-2">Body</label>
                            <textarea id="body" name="body" placeholder="Enter body" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required></textarea>
                        </div>
                        <div class="flex justify-end">
                            <button type="button" onclick="closeModal()" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Cancel</button>
                            <button type="submit" class="ml-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</container>

    <script>
        async function fetchEmailTemplates() {
            const response = await fetch('/emailTemplates/all');
            const templates = await response.json();
            const tbody = document.getElementById('emailTemplatesBody');
            tbody.innerHTML = '';
            templates.forEach(template => {
                tbody.innerHTML += `
                    <tr class="bg-white hover:bg-gray-50">
                        <td class="border px-4 py-2 text-sm text-gray-700">${template.subject}</td>
                        <td class="border px-4 py-2 text-sm text-gray-700">${template.body}</td>
                        <td class="border px-4 py-2 text-sm text-gray-700">
                            <button onclick="openModal('update', '${template._id}', '${template.subject}', '${template.body}')" class="bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-1 px-2 rounded">Update</button>
                            <button onclick="deleteEmailTemplate('${template._id}')" class="bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded">Delete</button>
                        </td>
                    </tr>
                `;
            });
        }

        function openModal(mode, id = '', subject = '', body = '') {
            document.getElementById('emailTemplateId').value = id;
            document.getElementById('subject').value = subject;
            document.getElementById('body').value = body;
            document.getElementById('modalTitle').innerText = mode === 'create' ? 'Add New Template' : 'Update Template';
            document.getElementById('emailTemplateForm').onsubmit = mode === 'create' ? createEmailTemplate : updateEmailTemplate;
            document.getElementById('modal').classList.remove('hidden');
        }

        function closeModal() {
            document.getElementById('modal').classList.add('hidden');
        }

        async function createEmailTemplate(event) {
            event.preventDefault();
            const subject = document.getElementById('subject').value;
            const body = document.getElementById('body').value;
            const response = await fetch('/emailTemplates/create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ subject, body })
            });
            if (response.ok) {
                fetchEmailTemplates();
                closeModal();
            } else {
                console.error('Failed to create email template');
            }
        }

        async function updateEmailTemplate(event) {
            event.preventDefault();
            const id = document.getElementById('emailTemplateId').value;
            const subject = document.getElementById('subject').value;
            const body = document.getElementById('body').value;
            const response = await fetch(`/emailTemplates/update/${id}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ subject, body })
            });
            if (response.ok) {
                fetchEmailTemplates();
                closeModal();
            }
        }
               
</script>